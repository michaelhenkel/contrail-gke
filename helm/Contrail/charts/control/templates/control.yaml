---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailcontrol-svc
  labels:
    app: contrailcontrol-svc
spec:
  ports:
  - port: 5269
    targetPort: 5269
    protocol: TCP
    name: xmpp
  - port: 179
    targetPort: 179
    protocol: TCP
    name: bgp
  clusterIP: None
  selector:
    app: contrailcontrol
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailcontrol-pdb
spec:
  selector:
    matchLabels:
      app: contrailcontrol
  minAvailable: 2
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailcontrol
spec:
  serviceName: contrailcontrol-svc
  replicas: {{ .Values.global.nodeCount }}
  template:
    metadata:
      labels:
        app: contrailcontrol
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      tolerations:
      - operator: Exists
        effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - contrailcontrol
              topologyKey: "kubernetes.io/hostname"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      #privileged: true
      containers:
      - name: nodemgr
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-nodemgr:{{ .Values.global.containerTag }}
        resources:
          requests:
            memory: "1Gi"
            cpu: "250m"
        envFrom:
        - configMapRef:
            name: contrail-cm
        env:
        - name: NODE_TYPE
          value: "control"
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      - name: control
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-control-control:{{ .Values.global.containerTag }}
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        ports:
        - containerPort: 8081
          name: client
        envFrom:
        - configMapRef:
            name: contrail-cm
      - name: named
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-control-named:{{ .Values.global.containerTag }}
        envFrom:
        - configMapRef:
            name: contrail-cm
        volumeMounts:
        - name: contrail-dns
          mountPath: /etc/contrail/dns
        securityContext:
          privileged: true
      - name: dns
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-control-dns:{{ .Values.global.containerTag }}
        envFrom:
        - configMapRef:
            name: contrail-cm
        volumeMounts:
        - name: contrail-dns
          mountPath: /etc/contrail/dns
      volumes:
      - name: contrail-dns
        emptyDir: {}
      - name: docker-unix-socket
        hostPath:
          path: /var/run
