---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailconfig-svc
  labels:
    app: contrailconfig-svc
spec:
  ports:
  - port: 8082
    targetPort: 8082
    protocol: TCP
    name: api
  clusterIP: None
  selector:
    app: contrailconfig
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailconfig-pdb
spec:
  selector:
    matchLabels:
      app: contrailconfig
  minAvailable: 2
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: {{ .Values.global.namespace }}
  name: contrailconfig
spec:
  serviceName: contrailconfig-svc
  replicas: {{ .Values.global.nodeCount }}
  template:
    metadata:
      labels:
        app: contrailconfig
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - contrailconfig
              topologyKey: "kubernetes.io/hostname"
      imagePullSecrets:
      - name: contrail-nightly
      containers:
      - name: nodemgr
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-nodemgr:{{ .Values.global.containerTag }}
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: contrail-cm
        env:
        - name: NODE_TYPE
          value: "config"
        - name: DOCKER_HOST
          value: "unix://mnt/docker.sock"
        volumeMounts:
        - mountPath: /mnt
          name: docker-unix-socket
      - name: api
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-config-api:{{ .Values.global.containerTag }}
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
        ports:
        - containerPort: 8082
          name: client
        envFrom:
        - configMapRef:
            name: contrail-cm
      - name: svcmonitor
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-config-svcmonitor:{{ .Values.global.containerTag }}
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: contrail-cm
      - name: schema
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-config-schema:{{ .Values.global.containerTag }}
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: contrail-cm
      - name: devicemgr
        #command: ["/bin/sh","-c", "while true; do echo hello; sleep 10;done"]
        imagePullPolicy: Always
        image: {{ .Values.global.containerRegistry }}/contrail-controller-config-devicemgr:{{ .Values.global.containerTag }}
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
        envFrom:
        - configMapRef:
            name: contrail-cm
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
      - name: host-usr-bin
        hostPath:
          path: /usr/bin
