---
apiVersion: v1
kind: Service
metadata:
  namespace: contrail
  labels:
    app: contraildatabase
  name: contraildatabase
spec:
  clusterIP: None
  ports:
  - port: 9042
    name: cql-svc
  - port: 9160
    name: rpc-svc
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  selector:
    app: contraildatabase
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: contrail
  name: zk-cm
data:
  jvm.heap: "1G"
  tick: "2000"
  init: "10"
  sync: "5"
  client.cnxns: "60"
  snap.retain: "3"
  purge.interval: "0"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: contrail
  name: cassandra-data-1
  labels:
    type: local
    app: contraildatabase
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/data/cassandra-data-1
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: contrail
  name: cassandra-data-2
  labels:
    type: local
    app: contraildatabase
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/data/cassandra-data-2
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: contrail
  name: cassandra-data-3
  labels:
    type: local
    app: contraildatabase
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /tmp/data/cassandra-data-3
  persistentVolumeReclaimPolicy: Recycle
---
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  namespace: contrail
  name: contraildatabase
spec:
  serviceName: contraildatabase
  replicas: 3
  template:
    metadata:
      labels:
        app: contraildatabase
        "net.juniper.contrail.service": "cassandra"
        "net.juniper.contrail.container.name": "contrail-external-cassandra"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - contraildatabase
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: nodemgr
          imagePullPolicy: Always
          image: docker.io/michaelhenkel/contrail-nodemgr:5.1-dev1
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
          envFrom:
          - configMapRef:
              name: contrail-cm
          env:
          - name: NODE_TYPE
            value: "database"
          - name: DATABASE_NODEMGR__DEFAULTS__minimum_diskGB
            value: "10"
          - name: DOCKER_HOST
            value: "unix://mnt/docker.sock"
          volumeMounts:
          - mountPath: /mnt
            name: docker-unix-socket
        - name: cassandra
          image: cassandra:3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
            - containerPort: 9160
              name: rpc
          env:
            - name: CASSANDRA_SEEDS
              value: cassandra-0.cassandra.default.svc.cluster.local
            - name: MAX_HEAP_SIZE
              value: 256M
            - name: HEAP_NEWSIZE
              value: 100M
            - name: CASSANDRA_CLUSTER_NAME
              value: "Cassandra"
            - name: CASSANDRA_DC
              value: "DC1"
            - name: CASSANDRA_RACK
              value: "Rack1"
            - name: CASSANDRA_START_RPC
              value: "true"
            - name: CASSANDRA_ENDPOINT_SNITCH
              value: GossipingPropertyFileSnitch
          volumeMounts:
            - name: cassandra-data
              mountPath: /var/lib/cassandra/data
        - name: k8szk
          imagePullPolicy: Always
          image: gcr.io/google_samples/k8szk:v3
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
          ports:
          - containerPort: 2181
            name: client
          - containerPort: 2888
            name: server
          - containerPort: 3888
            name: leader-election
          env:
          - name : ZK_REPLICAS
            value: "3"
          - name : ZK_HEAP_SIZE
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: jvm.heap
          - name : ZK_TICK_TIME
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: tick
          - name : ZK_INIT_LIMIT
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: init
          - name : ZK_SYNC_LIMIT
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: tick
          - name : ZK_MAX_CLIENT_CNXNS
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: client.cnxns
          - name: ZK_SNAP_RETAIN_COUNT
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: snap.retain
          - name: ZK_PURGE_INTERVAL
            valueFrom:
              configMapKeyRef:
                  name: zk-cm
                  key: purge.interval
          - name: ZK_CLIENT_PORT
            value: "2181"
          - name: ZK_SERVER_PORT
            value: "2888"
          - name: ZK_ELECTION_PORT
            value: "3888"
          command:
          - sh
          - -c
          - zkGenConfig.sh && zkServer.sh start-foreground
          readinessProbe:
            exec:
              command:
              - "zkOk.sh"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - "zkOk.sh"
            initialDelaySeconds: 10
            timeoutSeconds: 5
          #volumeMounts:
          #- name: contraildatabase-data
          #  mountPath: /var/lib/zookeeper
      volumes:
      - name: docker-unix-socket
        hostPath:
          path: /var/run
  volumeClaimTemplates:
    - metadata:
        name: cassandra-data
        annotations:  # comment line if you want to use a StorageClass
          # or specify which StorageClass
          volume.beta.kubernetes.io/storage-class: ""   # comment line if you
          # want to use a StorageClass or specify which StorageClass
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
